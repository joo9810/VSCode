피쳐 선택(Feature Selection)
- Filtering 방법
=> 타겟/종속변수에 관련성이 높은 피쳐/독립변수 선택
=> 상관계수
=> 몇 개? k개 -> 점진적으로 늘려가기

- Wrapper 방법
=> Forward 방식 : 기준에 따라 K개 피쳐를 선택 -> 성능평가 -> 피쳐
=> Backward 방식 : 모든 피쳐 선택 -> 성능평가 -> 피쳐 제거
=> Stepwise 방식 : Forward + Backward

- Embedding 방법
=> 모델 내부에 피쳐 선택 기능 포함된 것 -> Important Feature, 주성분분석(PCA)

튜닝(Tunning) -> 모델 수정
- 모델의 성능 높이기
=> scikit-learn에서 모델 인스턴스의 score 메서드
=> 모델을 평가기준이 되는 성능지표 => 분류/회귀에 따라 다름

- 모델 성능에 영향을 미치는 매개변수 -> 하이퍼 파라미터(Hyper-parameter)
=> KNN -> K 개수
=> LinearRegression -> 가중치, 기울기 초기화 값, 규제
=> 학습 알고리즘 마다 Hyper-parameter가 다름!

- 피쳐 제어
=> 피쳐 개수 조절
=> 피쳐 추출/ 압축

- 기계학습
데이터 기반 => 규칙/패턴 => 수식 => 모델

- 미래예측
정보 정확 제공

- 학습용 DS => 학습용 + 테스트용
- 테스트용 DS

ML Process
1. 데이터 준비 => 데이터 로딩, 데이터 확인 (실제 데이터 확인 및 탐색)
2. 데이터 전처리 
    => 정제 (결측치, 중복값, 이상치, 컬럼, 고유값....)
    => 피쳐에 대한 처리 (인코딩, 스케일링....)
    => 피쳐 선택, 가공
    => 피쳐와 타겟 (독립변수와 종속변수)
3. 학습 준비
    => 데이터셋 (train, validation, test)
        -> 데이터 부족 및 일반화 위해서 train, test 데이터셋 분리
4. 학습 진행
    => 교차검증으로 학습 진행 : train 데이터셋 사용
5. 모델 평가
    => test 데이터셋으로 평가
    => 평가 기준 : 분류와 회귀가 다름!

### 모델의 성능을 높이는 작업 즉, 튜닝 진행
- Hyper Parameter 제어 : 모델 인스턴스 생성 시 매개변수로 설정
- 새로운 모델로 학습 진행 => 평가
