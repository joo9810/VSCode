# 하는 것 같음.
vapply_test3 <- vapply(b,mean,c('Mean'=0))
vapply_test3 # mean의 fun.value는 1개라 한개만 설정해주면 되는듯
b <- iris[,1:4] # 5행인 꽃의 종류는 명목형이라 계산에 필요 없다
b
# 0 대신 1이나 2를 넣어도 되는 것 같음. 숫자로 출력한다는 걸 표현한듯?
# 아마 fivenum의 fun.value가 5개라서 5개의 value값을 벡터의 형태로 지정해줘야
# 하는 것 같음.
vapply_test3 <- vapply(b,mean,c('Mean'=0))
vapply_test3 # mean의 fun.value는 1개라 한개만 설정해주면 되는듯
library(magrittr)
library(dplyr)
library(tidyverse)
read.csv('test_score(1).csv')
read.csv('test_score(1).csv')
read.csv('test_score(1).csv')
read.csv('test_score(1).csv')
read.csv('test_score(1).csv')
read.csv('test_score.csv')
# dplyr 패키지 사용법 (반드시 출제)
exam <- read.csv('test_score(1).csv')
str(exam)
library(dplyr)
library(magrittr)
library(tidyverse)
usedcars
read.csv('usedcars')
read.csv('usedcars.csv')
price_box <- boxplot(usedcars$price,main='Price Boxplot',ylab='price ($)')
usedcars <- read.csv('usedcars.csv')
price_box <- boxplot(usedcars$price,main='Price Boxplot',ylab='price ($)')
Q1 <- fivenum(usedcars$price)[2]
Q1
Q3 <- fivenum(usedcars$price)[4]
Q3
IQR(usedcars$price)
range(usedcars$price)
Q3-Q1
diff(range(usedcars$price))
IQR <- IQR(usedcars$price)
IQR
IQR <- IQR(usedcars$price,na.rm=TRUE)
IQR
which(usedcars$price>=Q3=1.5*IQR)
which(usedcars$price>=Q3+1.5*IQR)
UpperOutlier <- which(usedcars$price>=Q3+1.5*IQR)
usedcars[UpperOutlier$price]
usedcars[UpperOutlier$'price']
usedcars[UpperOutlier,'price']
IQR
LowerOutlier <- which(usedcars$price<=Q1+1.5*IQR)
LowerOutlier
LowerOutlier <- which(usedcars$price<=Q1-1.5*IQR)
LowerOutlier
usedcars[LowerOutlier,'price']
mileage_box <- boxplot(usedcars$mileage,main='Mileage Boxplot',
ylab='(mi.)')
Qm1 <- fivenum(usedcars$mileage)[2]
Qm1
Qm3 <- fivenum(usedcars$mileage)[4]
Qm3
IQRm <- IQR(usedcars$mileage,na.rm=TRUE)
IQRm
UpperMile <- which(usedcars$mileage>=Qm3+1.5*IQRm)
UpperMile
usedcars[Uppermile,'mileage']
usedcars[UpperMile,'mileage']
LowerMile <- which(usedcars$mileage<=Qm1-1.5*IQRm)
Lowermile
LowerMile
usedcars[LowerMile,'mileage']
#히스토그램
hist(usedcars$price,main='Price histogram',ylab='Price ($)')
price2 <- (usedcars$price)^2
hist(price2)
#히스토그램
hist(usedcars$price,main='Price histogram',ylab='Price ($)')
price2 <- (usedcars$price)^2
hist(price2)
price4 <- price2^2
hist(price4)
price4 <- (usedcars$price)^4
hist(price5)
price5 <- (usedcars$price)^4
hist(price4)
hist(price5)
hist(usedcars$mileage,main='Mileage histogram',ylab='(mi.)')
mileage2 <- (usedcars$mileage)^2
hist(mileage2)
mileage4 <- (usedcars$mileage)^4
hist(mileage4)
hist(usedcars$mileage,main='Mileage histogram',ylab='(mi.)')
mileage2 <- (usedcars$mileage)^2
hist(mileage2)
mileage4 <- (usedcars$mileage)^4
hist(mileage4)
hist(price)
hist(usedcars$price)
sqrt(usedcars$price)
sqrt_price <- sqrt(usedcars$price)
hist(sqrt_price)
hist(usedcars$price)
sqrt_price <- sqrt(usedcars$price)
hist(sqrt_price)
sqrt_price4 <- sqrt(sqrt_price)
hist(sqrt_price4)
sqrt_mileage <- sqrt(usedcars$mileage)
hist(sqrt_mileage)
hist(usedcars$mileage)
hist(usedcars$mileage)
hist(sqrt_mileage)
sqrt_mileage4 <- sqrt(sqrt_mileage)
hist(sqrt_mileage)
hist(sqrt_mileage4)
log_price <- log(usedcars$price)
hist(log_price)
hist(usedcars$price)
hist(log_price)
hist(sqrt_price)
hist(usedcars$price)
hist(sqrt_price)
hist(usedcars$price)
hist(log_price)
#산점도
plot(x=usedcars$price,y=usedcars$mileage,main='Plot of price & mileage',
xlab='Price ($)',ylab='(mi.)')
usedcars[,c(1,3,4)]
#산점도
plot(x=usedcars$price,y=usedcars$mileage,main='Plot of price & mileage',
xlab='Price ($)',ylab='(mi.)')
#산점도
plot(x=usedcars$price,y=usedcars$mileage,main='Plot of price & mileage',
xlab='Price ($)',ylab='(mi.)')
str(usedcars)
a <- usedcars[,c(1,3,4)]
a
cor(a)
cor(r_usedcars) #대각행렬,대칭행렬
r_usedcars <- usedcars[,c(1,3,4)] #행은 모두. 열은 1,3,4 출력
r_usedcars
cor(r_usedcars) #대각행렬,대칭행렬
cor(a, use='pairwise.complete.obs',method='pearson')
pairs(a)
# 4번 문제
mpg %>% filter(audi)
#install.packages('ggplot2')
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggplot2)
# 4번 문제
mpg %>% filter(audi)
# 4번 문제
mpg %>% filter('audi')
# 4번 문제
mpg %>% filter(model$audi)
# 4번 문제
mpg
# 4번 문제
mpg %>% filter(manufacturer$audi)
# 4번 문제
mpg %>% filter(manufacturer,audi)
# 4번 문제
mpg %>% filter(manufacturer)
# 4번 문제
mpg %>% filter(audi)
#install.packages('ggplot2')
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggplot2)
# 4번 문제
mpg %>% filter(manufacturer==audi)
# 4번 문제
mpg %>% filter(manufacturer=='audi')
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(hwy)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(hwy) %>% head(5)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(decs(hwy)) %>% head(5)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(dec(hwy)) %>% head(5)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(des(hwy)) %>% head(5)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(desc(hwy)) %>% head(5)
# 5번 문제
copy_mpg <- mpg
# 5번 문제
copy_mpg <- mpg
copy_mpg %>% mutate(total=hwy+cty)
copy_mpg %>% mutate(total=hwy+cty) %>% head(5)
copy_mpg %>% mutate(total=hwy+cty) %>% head(5)
copy_mpg %>% mutate(합산연비변수수=hwy+cty) %>% head(5)
copy_mpg %>% mutate(합산연비변수=hwy+cty) %>% head(5)
copy_mpg %>% mutate(합산 연비 변수=hwy+cty) %>% head(5)
copy_mpg %>% mutate(합산연비변수=hwy+cty) %>% head(5)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>% head(5)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>% mutate('평균 연비 변수'='합산 연비 변수'/2)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>% mutate('평균 연비 변수'=합산 연비 변수/2)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>% mutate('평균 연비 변수'=(hwy+cty)/2)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>%
mutate('평균 연비 변수'=(hwy+cty)/2)
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>%
mutate('평균 연비 변수'=(hwy+cty)/2) %>% arrange(desc('평균 연비 변수수'))
copy_mpg %>% mutate('합산 연비 변수'=hwy+cty) %>%
mutate('평균 연비 변수'=(hwy+cty)/2) %>% arrange(desc('평균 연비 변수'))
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc('평균 연비 변수'))
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(totalHC))
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(totalHC)) %>% head(3)
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(meanHC)) %>% head(3)
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(meanHC)) %>% head(3)
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(meanHC))
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(meanHC)) %>% head(3)
copy_mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(meanHC)) %>% head(3)
mpg %>% mutate(totalHC=hwy+cty) %>%
mutate(meanHC=(hwy+cty)/2) %>% arrange(desc(meanHC)) %>% head(3)
# 5-1번
copy_mpg <- transform(totalHC=cty+hwy)
# 5-1번
copy_mpg %>% mutate(totalCH=cty+hwy)
# 5-1번
copy_mpg %>% mutate(totalCH=cty+hwy)
# 5-2번
copy_mpg %>% mutate(meanCH=totalCH/2)
# 5-1번
copy_mpg1 <- transform(copy_mpg,totalCH=cty+hwy)
copy_mpg1
# 5-2번
copy_mpg2 <- transform(copy_mpg1,meanCH=totalCH/2)
copy_mpg2
copy_mpg2 %>% arrange(desc(meanCH))
copy_mpg2 %>% arrange(desc(meanCH))
copy_mpg2 %>% arrange(desc(meanCH)) %>% head(3)
# 5-1번
copy_mpg %>% mutate(totalCH=cty+hwy)
# 5-1번
copy_mpg %>% mutate(totalCH=cty+hwy)
# 5-1번
copy_mpg1 <- copy_mpg %>% mutate(totalCH=cty+hwy)
# 5-2번
copy_mpg1 %>% mutate(meanCH=totalCH/2)
# 5-2번
copy_mpg1 %>% mutate(meanCH=totalCH/2)
# 5-2번
copy_mpg2 <- copy_mpg1 %>% mutate(meanCH=totalCH/2)
# 5-1번
copy_mpg1 <- copy_mpg %>% mutate(totalCH=cty+hwy)
copy_mpg1
copy_mpg2
# 5-3번
copy_mpg2 %>% arrange(desc(meanCH)) %>% head(3)
# 5-4번
mpg %>% mutate(totalCH=cty+hwy) %>%
mutate(meanCH=totalCH/2) %>% arrange(desc(meanCH)) %>% head(3)
# 5-1번
copy_mpg1 <- copy_mpg %>% mutate(totalCH=cty+hwy)
copy_mpg1
# 5-2번
copy_mpg2 <- copy_mpg1 %>% mutate(meanCH=totalCH/2)
copy_mpg2
# 5-3번
copy_mpg2 %>% arrange(desc(meanCH)) %>% head(3)
# 5-4번
mpg %>% mutate(totalCH=cty+hwy) %>%
mutate(meanCH=totalCH/2) %>% arrange(desc(meanCH)) %>% head(3)
# 5-3번
copy_mpg2 %>% arrange(desc(meanCH)) %>% head(3)
# 5-4번
mpg %>% mutate(totalCH=cty+hwy) %>%
mutate(meanCH=totalCH/2) %>% arrange(desc(meanCH)) %>% head(3)
# 6번 문제
str(mpg)
# 6번 문제
mpg[,c(8,11)]
# 6번 문제
mpg[,c(8,11)] %>% filter(class=='compact')
# 6번 문제
mpg[,c(8,11)] %>% filter(class=='compact') %>% mean(mpg$cty)
# 6번 문제
mpg[,c(8,11)] %>% filter(class=='compact')
# 6번 문제
compact_cty <- mpg[,c(8,11)] %>% filter(class=='compact')
mean(compact_cty)
mean(compact_cty$cty)
str(mpg)
mpg[,c(11)]
as.data.frame(mpg)
mpg[,c(8,11)]
mpg[,c(8,11)] %>% filter(class=='midsize')
midsize_cty <- mpg[,c(8,11)] %>% filter(class=='midsize')
mean(midsize_cty)
mean(midsize_cty$cty)
mean(compact_cty$cty)
as.data.frame(mpg)
str(mpg)
# 6번 문제
mpg %>% group_by(class)
# 6번 문제
mpg %>% group_by(class)
exam
exam <- read.csv('test_score(1).csv')
exam <- read.csv('test_score(1).csv')
str(exam)
head(exam)
#summarise 요약 통계량
exam %>% summarise(mean_music=mean(music))
exam %>% summarise(max_music=max(music))
# 6번 문제
mpg %>% summarise(mean_cty=mean(cty))
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean_cty=mean(cty))
# 6번 문제
mpg %>% group_by(class) %>% mean(cty)
# 6번 문제
mpg %>% group_by(class)
# 6번 문제
mpg %>% group_by(class) %>% summary(hwy)
#summarise 요약 통계량
exam %>% summarise(mean_music=mean(music))
exam %>% summarise(max_music=max(music))
abstract <- exam %>% group_by(class) %>% summarise(mean_music=mean(music),
max_music=max(music),
median_music=median(music),
n=n())
abstract
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean(hwy))
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean_hwy=mean(hwy))
# 2seater,compact,midsize,minivan,pickup,subcompact,suv가 있음을 알 수 있습니다.
seater_cty <- mpg[,c(8,11)] %>% filter(class=='2seater')
mean(seater_cty$cty)
mpg[,c(8,11)]
mpg[,c(8,11)] %>% filter(class=='minivan')
minivan_cty <- mpg[,c(8,11)] %>% filter(class=='minivan')
mean(minivan_cty$cty)
mpg[,c(8,11)]
mpg[,c(8,11)] %>% filter(class=='pickup')
pickup_cty <- mpg[,c(8,11)] %>% filter(class=='pickup')
mean(pickup_cty$cty)
mpg[,c(8,11)]
mpg[,c(8,11)] %>% filter(class=='subcompact')
subcompact_cty <- mpg[,c(8,11)] %>% filter(class=='subcompact')
mean(subcompact_cty$cty)
mpg[,c(8,11)]
mpg[,c(8,11)] %>% filter(class=='suv')
suv_cty <- mpg[,c(8,11)] %>% filter(class=='suv')
mean(suv_cty)
mean(suv_cty$cty)
mean(lowdispl$hwy) # 4이하인 자동차 평균
#install.packages('ggplot2')
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggplot2)
data('mpg')
mpg
str(mpg)
# 1번 문제
a <- mpg %>% select(displ,hwy)
a
lowdispl <- a %>% filter(displ<=4)
highdispl <- a %>% filter(displ>=5)
lowdispl
highdispl
mean(lowdispl$hwy) # 4이하인 자동차 평균
mean(highdispl$hwy) # 5이상인 자동차 평균
# 2번 문제
b <- mpg %>% filter(manufacturer==c('chevrolet','ford','honda')) %>% select(
manufacturer,hwy
)
mean(b$hwy)
# 3번 문제
c <- mpg %>% select(class,cty)
c %>% head(10)
mean(b$hwy)
hwymean <- mpg %>% filter(manufacturer%in%c('chevorolet','ford','honda'))
mean(hwymean$hwy)
mean(b$hwy)
mean(hwymean$hwy)
# 따라서 세 회사의 연비 평균은 22.27778입니다.
hwymean <- mpg %>% filter(manufacturer==c('chevorolet','ford','honda'))
mean(hwymean$hwy)
# 2번 문제
b <- mpg %>% filter(manufacturer%in%c('chevrolet','ford','honda')) %>% select(
manufacturer,hwy
)
mean(b$hwy)
mean(hwymean$hwy)
# 2번 문제
b <- mpg %>% filter(manufacturer%in%c('chevrolet','ford','honda')) %>% select(
manufacturer,hwy
)
mean(b$hwy)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(desc(hwy)) %>% head(5)
# 5번 문제
copy_mpg <- mpg
# 5-1번
copy_mpg1 <- copy_mpg %>% mutate(totalCH=cty+hwy)
copy_mpg1
# 5-2번
copy_mpg2 <- copy_mpg1 %>% mutate(meanCH=totalCH/2)
copy_mpg2
# 5-3번
copy_mpg2 %>% arrange(desc(meanCH)) %>% head(3)
# 5-4번
mpg %>% mutate(totalCH=cty+hwy) %>%
mutate(meanCH=totalCH/2) %>% arrange(desc(meanCH)) %>% head(3)
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean_hwy=mean(hwy))
mean(lowdispl$hwy) # 4이하인 자동차 평균
mean(highdispl$hwy) # 5이상인 자동차 평균
lowdispl <- a %>% filter(displ<=4)
highdispl <- a %>% filter(displ>=5)
lowdispl
highdispl
mean(lowdispl$hwy) # 4이하인 자동차 평균
mean(highdispl$hwy) # 5이상인 자동차 평균
mean(b$hwy)
c %>% head(10)
# 4번 문제
mpg %>% filter(manufacturer=='audi') %>% arrange(desc(hwy)) %>% head(5)
# 5번 문제
copy_mpg <- mpg
# 5-1번
copy_mpg1 <- copy_mpg %>% mutate(totalCH=cty+hwy)
copy_mpg1
# 5-2번
copy_mpg2 <- copy_mpg1 %>% mutate(meanCH=totalCH/2)
copy_mpg2
# 5-3번
copy_mpg2 %>% arrange(desc(meanCH)) %>% head(3)
# 5-4번
mpg %>% mutate(totalCH=cty+hwy) %>%
mutate(meanCH=totalCH/2) %>% arrange(desc(meanCH)) %>% head(3)
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean_hwy=mean(hwy))
mean(seater_cty$cty) # 15.4
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean_hwy=mean(hwy))
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean(hwy))
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean(cty))
# 6번 문제
mpg %>% group_by(class) %>% summarise(mean(cty))
version
install.packages('magrittr')
#install.packages('magrittr')
install.packages('dplyr')
library(dplyr)
#install.packages('magrittr')
#install.packages('dplyr')
install.packages('tidyverse')
#install.packages('magrittr')
#install.packages('dplyr')
#install.packages('tidyverse')
library(magrittr) #라이브러리는 매번 적어줘야 함
library(dplyr)
library(tidyverse)
#install.packages('magrittr')
#install.packages('dplyr')
install.packages('tidyverse')
install.packages("tidyverse")
# dplyr 패키지 사용법 (반드시 출제)
exam <- read.csv('test_score(1).csv')
str(exam)
head(exam)
tail(exam)
exam
a <- exam %>% filter(music>50)
#music 점수가 50점보다 큰 행을 추출하여라
a <- exam %>% filter(music>50)
#install.packages('magrittr')
#install.packages('dplyr')
#install.packages('tidyverse')
library(magrittr) #라이브러리는 매번 적어줘야 함
library(dplyr)
library(tidyverse)
# dplyr 패키지 사용법 (반드시 출제)
exam <- read.csv('test_score(1).csv')
str(exam)
head(exam)
tail(exam)
#music 점수가 50점보다 큰 행을 추출하여라
a <- exam %>% filter(music>50)
a
b <- exam %>% filter(class == 1 & language > 50)
b
exam %>% select(music)
exam %>% select(class,music,language)
exam %>% filter(class == 1) %>% select(language)
set.seed(151)
x1<-sample(c("C1","C2","C3"),20,replace=TRUE)
x2<-sample(c("S1","S2","S3","S4","S5"),20,replace=TRUE)
y<-rnorm(20,5,2)
df1<-data.frame(x1,x2,y)
df1
library(car)
leveneTest(y~x1*x2,data=df1)
