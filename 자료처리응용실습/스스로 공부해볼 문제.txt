x는 1~5이다
x는 1~5의 순열이다
x는 1~100까지 10씩 증가시킨다
x는 3부터의 순열이며 길이가 10이다
x는 1부터 1씩 증가시키면서 10번까지 나타낸 것이다
x는 1을 5번 반복한다
x는 1~5까지를 5번 반복한다
10과20은 19보다 큰가?
(2,3)은 (1,2)와 (-1,3)보다 큰가?
1,2,4안에 1이 있는가?
1,2,3안에 1,4가 있는가?
-----------------------------
a는 11~30이다
a에서 3번째 원소를 나타내라
a에서 11번째 원소를 나타내라
a에서 1~5번째 원소를 나타내라
a에서 7~17번째 원소를 나타내라
a에서 3,6,8번째 원소를 나타내라
a에서 2~5번째,8~11번째 원소를 나타내라
a안에 29가 있는가?
-----------------------------
c는 10,20,30이다
c에 10을 더해라
c에 5를 빼라
c에 각 원소에 각각 3,5,7을 빼라
c를 제곱해라
c를 5로 나눴을때 나머지를 보여라 (나머지 연산자 기억)
c를 5로 나눴을때 몫을 보여라 (몫 연산자 기억)
-----------------------------
연산자를 모아놓은게 함수, 함수를 모아놓은게 패키지
-----------------------------
m은 1~16까지 행이4개이다
m_col은 1~16까지 열이 4개이다
m의 행과 열의 개수는?
m_col의 행과 열의 개수는?
m의 전치행렬은?
행이 3개이며 1로 구성된 대각행렬은?
행이 5개이며 5로 구성된 대각행렬은?
1을 2번 사용한 열이 3개인 대각행렬은?
m1은 1~16까지 행이 4개이며 dimnames를 이용해 행과 열의 이름을 바꿔라 (r1~r4,c1~c4)
m2는 1~9까지 행이 3개이며 rownames,colnames를 이용해 이름을 바꿔라 (R1~R3,C1~C3)
m1의 1행2열에 있는 원소를 추출해라
m1의 1~2행 2~3열 원소를 추출해라
m1의 1행만 출력하고 나머지 다 출력해라
m1의 3열만 빼고 다 출력해라
m2의 행R1,R3와 열C1,C2를 출력해라
m1의 3~8번째의 원소를 벡터로 나타내어라
m1과 m1을 더해라
m1에서 2곱하기m1을 빼라
m1과 m1을 곱해라
m1과 m1을 내적해라
-----------------------------
이름은 a1이고 1~9를 원소로 같는 행이1 열이5 차원이2인 배열을 만들어라 (array)
a1의 행의 이름은 행1 열의 이름은 열1~5 차원의 이름은 차원1~2라고 짓고 a2로 만들어라
a2의 1행까지만 보이고 나머지 다 보여라
a2의 1열까지만 보이고 나머지 다보여라
a2의 1차원까지만 보이고 나머지 다 보여라
a2의 2차원까지만 보이고 나머지 다 보여라
a2의 1행까지,2~4열까지,1~2차원까지 보여라
-----------------------------
gender는 M,F,M으로 이루어져 있다
blood는 O,AB,B로 이루어져 있고 범주는 A,B,AB,O이다
a는 gender의 도수분포이다
b는 blood의 도수분포이다
a의 상대도수분포는?
b의 상대도수분포는?
symptom은 찰과상,중상,경상으로 이루어져 있고 범주는 찰과상<경상<중상 순서이다
symptom은 찰과상보다 큰가?
------------------------------
dplyr사용
exam을 music을 기준으로 오름차순
exam을 music을 기준으로 내림차순
class 기준으로 오름차순 시킨다음 반 내에서 music을 내림차순
class 기준으로 오름차순 시킨다음 반 내에서 music을 오름차순
exam에 total이라는 변수를 추가해라 total은 music,language,statstics의 점수를 더한 변수이다. 앞 10개만 출력해라
위의 했는걸 total을 기준으로 내림차순
다시 total을 기준으로 오름차순
*exam에 test라는 변수를 추가해라 test는 statistics의 점수가 60보다 같거나 크면 pass이고 아니면 fail이다. 앞 10개만 출력해라
class별로 그룹을 나눠라
music의 평균을 mean_music이라고 짓고 구하라
music의 최댓값을 max_music이라고 짓고 구하라
abstract라는 객체를 exam의 class 별로 그룹을 나눠서 music의 평균 최댓값 중앙값 사람수를 각각 mean_music max_music median_music n 이라 짓고 구하라
abstract는 tibble구조인데 이를 data.frame구조로 바꿔라
test1은 id가 1,2,3,4,5이고 각각의 mid점수가 60,70,80,90,100인 데이터프레임이다
test2는 id가 1,2,3,4,5이고 각각의 final점수가 70,80,65,90,96인 데이터프레임이다
total이라는 객체를 test1과 test2를 id를 기준으로 병합해라
name이라는 객체는 class가 1,2,3,4,5이고 각각의 teacher가 kim,lee,park,choi,jang인 데이터프레임이다
exam_new라는 객체를 exam과 name을 class를 기준으로 병합해라
test3라는 객체를 test1과test2를 세로로 병합해라
test3의 id 변수를 지워라
test3의 결측치는 몇개인가?
-------------------------------
dplyr가 없을 때 기본 r이 제공하는 함수를 이용
test10은 id가 1,2,3,4,5이고 midterm이 60,70,80,90,100인 데이터프레임이고
test20은 id가 6,7,8,9,10이고 midterm이 60,70,90,67,90인 데이터프레임이다
id_score라는 객체는 test10과 test20의 행을 서로 결합한 것이다.
test30은 final이 94,92,80,100,78,69,75,85,90,60이고 last_name이 lee,kim,choi,park,lee,bae,lim,choi,park,kim인 데이터프레임이다
test40은 id_score와 test30의 열을 서로 결합한 것이다
*test50은 test40에서 mean이라는 변수를 추가한 것이다. mean은 midterm과 final의 평균이다
test60은 id가 1~10이고 pass가 p,p,p,p,p,f,p,p,p,p인 데이터프레임이다
test70은 test50,test60을 id를 기준으로 병합한 것이다.
-------------------------------
40000/3의 타입을 알려줘
40000/3를 정수형으로 만들어줘
40000/3를 실수형으로 만들어줘
usedcars.csv를 불러오고 stringsAsFactors = FALSE로 지정후 usedcars라는 객체로 지정
*usedcars의 year변수의 요약통계량을 보여줘
usedcars의 price와 mileage의 요약통계량을 보여줘
usedcars의 year의 상자그림 통계량을 보여줘
usedcars의 price의 상자그림 통계량을 보여줘
usedcars의 mileage의 상자그림 통계량을 보여줘
usedcars의 price의 평균을 보여줘
usedcars의 price의 중앙값을 보여줘
usedcars의 price의 최소 최댓값을 보여줘
usedcars의 price의 범위를 구해줘
*usedcars의 price의 사분위수를 보여줘
usedcars의 price의 사분위수범위를 구해줘
usedcars의 price의 1분위수와 99분위수를 보여줘
usedcars의 price의 20분위씩 끊어서 보여줘
usedcars의 price의 분산을 구해줘
usedcars의 price의 표준편차를 구해줘
9749892의 제곱근을 구해줘
usedcars의 price의 박스플랏을 그려줘 제목을 Boxplot of Used Car Prices y축을 price ($)로 하고 price_box객체로 지정
price_box의 이상값을 출력해줘
usedcars의 price의 상자그림 통계량을 보여줘
LowerQ라는 객체는 usedcars의 price의 1사분위수이다
UpperQ라는 객체는 usedcars의 price의 3사분위수이다
usedcars의 price의 사분위수 범위를 구하고 결측치가 있으면 없애라
응용문제
*usedcars의 price의 3사분위수+1.5IQR보다 더 큰 이상값들은 어떤 것들이 있는가? 출력해라 1사분위수-1.5IQR보다 작은 이상값들도 구해봐라
마찬가지의 방법으로 usedcars의 mileage도 상자그림을 위와 같은 방식으로 값을 구해봐라


















